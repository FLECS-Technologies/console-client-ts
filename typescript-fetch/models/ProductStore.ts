/* tslint:disable */
/* eslint-disable */
/**
 * FLECS Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';

/**
 * 
 * @export
 * @interface ProductStore
 */
export interface ProductStore {
    /**
     * 
     * @type {number}
     * @memberof ProductStore
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ProductStore
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ProductStore
     */
    shopName: string;
    /**
     * 
     * @type {string}
     * @memberof ProductStore
     */
    url: string;
    /**
     * 
     * @type {Address}
     * @memberof ProductStore
     */
    address: Address;
}

/**
 * Check if a given object implements the ProductStore interface.
 */
export function instanceOfProductStore(value: object): value is ProductStore {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('shopName' in value) || value['shopName'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    return true;
}

export function ProductStoreFromJSON(json: any): ProductStore {
    return ProductStoreFromJSONTyped(json, false);
}

export function ProductStoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductStore {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'shopName': json['shop_name'],
        'url': json['url'],
        'address': AddressFromJSON(json['address']),
    };
}

export function ProductStoreToJSON(json: any): ProductStore {
    return ProductStoreToJSONTyped(json, false);
}

export function ProductStoreToJSONTyped(value?: ProductStore | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'shop_name': value['shopName'],
        'url': value['url'],
        'address': AddressToJSON(value['address']),
    };
}

