/* tslint:disable */
/* eslint-disable */
/**
 * FLECS Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductToJSONTyped,
} from './Product';

/**
 * 
 * @export
 * @interface ProductResponse
 */
export interface ProductResponse {
    /**
     * 
     * @type {number}
     * @memberof ProductResponse
     */
    page: number;
    /**
     * 
     * @type {number}
     * @memberof ProductResponse
     */
    totalPages: number;
    /**
     * 
     * @type {Array<Product>}
     * @memberof ProductResponse
     */
    products: Array<Product>;
}

/**
 * Check if a given object implements the ProductResponse interface.
 */
export function instanceOfProductResponse(value: object): value is ProductResponse {
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    if (!('products' in value) || value['products'] === undefined) return false;
    return true;
}

export function ProductResponseFromJSON(json: any): ProductResponse {
    return ProductResponseFromJSONTyped(json, false);
}

export function ProductResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'page': json['page'],
        'totalPages': json['totalPages'],
        'products': ((json['products'] as Array<any>).map(ProductFromJSON)),
    };
}

export function ProductResponseToJSON(json: any): ProductResponse {
    return ProductResponseToJSONTyped(json, false);
}

export function ProductResponseToJSONTyped(value?: ProductResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'page': value['page'],
        'totalPages': value['totalPages'],
        'products': ((value['products'] as Array<any>).map(ProductToJSON)),
    };
}

