/* tslint:disable */
/* eslint-disable */
/**
 * FLECS Console API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { Jwt } from './Jwt';
import {
    JwtFromJSON,
    JwtFromJSONTyped,
    JwtToJSON,
    JwtToJSONTyped,
} from './Jwt';
import type { FeatureFlags } from './FeatureFlags';
import {
    FeatureFlagsFromJSON,
    FeatureFlagsFromJSONTyped,
    FeatureFlagsToJSON,
    FeatureFlagsToJSONTyped,
} from './FeatureFlags';

/**
 * 
 * @export
 * @interface Data
 */
export interface Data {
    /**
     * 
     * @type {FeatureFlags}
     * @memberof Data
     */
    featureFlags?: FeatureFlags;
    /**
     * 
     * @type {Jwt}
     * @memberof Data
     */
    jwt?: Jwt;
    /**
     * 
     * @type {User}
     * @memberof Data
     */
    user?: User;
}

/**
 * Check if a given object implements the Data interface.
 */
export function instanceOfData(value: object): value is Data {
    return true;
}

export function DataFromJSON(json: any): Data {
    return DataFromJSONTyped(json, false);
}

export function DataFromJSONTyped(json: any, ignoreDiscriminator: boolean): Data {
    if (json == null) {
        return json;
    }
    return {
        
        'featureFlags': json['feature_flags'] == null ? undefined : FeatureFlagsFromJSON(json['feature_flags']),
        'jwt': json['jwt'] == null ? undefined : JwtFromJSON(json['jwt']),
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
    };
}

export function DataToJSON(json: any): Data {
    return DataToJSONTyped(json, false);
}

export function DataToJSONTyped(value?: Data | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'feature_flags': FeatureFlagsToJSON(value['featureFlags']),
        'jwt': JwtToJSON(value['jwt']),
        'user': UserToJSON(value['user']),
    };
}

